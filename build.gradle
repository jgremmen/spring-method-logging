plugins {
  id 'java-library'
  id 'maven-publish'
  id 'jacoco'
  id 'signing'
}


description "Method Logging Extension for Spring"
group 'de.sayayi.lib'
version '0.4.1'

buildDir = ".build"


ext {
  jetbrainsAnnotationsVersion = "24.0.1"
  junitVersion = "5.10.0"
  log4jVersion = "2.20.0"
  lombokVersion = "1.18.28"
  messageFormatVersion = "0.8.2"
  slf4jVersion = "2.0.7"
  springFrameworkVersion = "5.3.29"
}


java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(8)
  }
}


compileTestJava {
  options.debugOptions.debugLevel = 'lines,vars,source'
  options.compilerArgs = [ "-parameters" ]
}


test {
  useJUnitPlatform()
}


apply from: file('gradle/javadoc.gradle')
apply from: file('gradle/quality.gradle')
apply from: file('gradle/publishing.gradle')


repositories {
  mavenCentral()
}


dependencies {
  // java
  compileOnlyApi "org.jetbrains:annotations-java5:${jetbrainsAnnotationsVersion}"
  compileOnlyApi "org.slf4j:slf4j-api:${slf4jVersion}"
  compileOnlyApi "org.apache.logging.log4j:log4j-api:${log4jVersion}"

  implementation "org.springframework:spring-context:${springFrameworkVersion}"

  implementation("de.sayayi.lib:message-format:${messageFormatVersion}") {
    exclude group: 'org.antlr', module: 'antlr4'
    exclude group: 'javax.cache', module: 'cache-api'
  }


  // test
  testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
  testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  testImplementation "org.springframework:spring-test:${springFrameworkVersion}"

  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
  testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}
